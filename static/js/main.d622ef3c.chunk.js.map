{"version":3,"sources":["types/Status.ts","components/NewTodoForm/NewTodoForm.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodosFilter/TodosFIlter.tsx","App.tsx","api/api.ts","index.tsx"],"names":["Status","NewTodoForm","React","memo","addTodo","useState","title","setTitle","className","onSubmit","event","preventDefault","type","data-cy","placeholder","value","onChange","target","TodoItem","todo","onToggle","onRemove","onUpdateList","completed","id","edit","setEdit","newTitle","setNewTitle","setValue","classNames","onDoubleClick","checked","htmlFor","onClick","onBlur","length","onKeyUp","key","TodoList","todos","toggleTodo","removeTodo","status","visibleTodos","filter","item","all","active","map","TodosFilter","onFilterClick","to","App","initialValue","localStorageValue","localStorage","getItem","JSON","parse","newValue","setItem","stringify","useLocalStorage","initialTodos","setInitialTodos","activeTodos","setActiveTodos","filterStatus","setFilterStatus","getActiveTodos","updateInitialTodos","prop","useEffect","newTodo","Date","toggleTodos","toggleAll","todoId","findTodo","find","filteredTodos","newInitialTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d622ef3c.chunk.js","sourcesContent":["// eslint-disable-next-line no-shadow\nexport enum Status {\n  all,\n  active,\n  completed,\n}\n","import React, { useState } from 'react';\n\ntype Props = {\n  addTodo: (title: string) => void;\n};\n\nexport const NewTodoForm: React.FC<Props> = React.memo(\n  ({ addTodo }) => {\n    const [title, setTitle] = useState('');\n\n    const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(event.target.value);\n    };\n\n    const handleSubmit = (event: React.FormEvent) => {\n      event.preventDefault();\n      addTodo(title);\n      setTitle('');\n    };\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            data-cy=\"createTodo\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n        </form>\n      </header>\n    );\n  },\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\n/* eslint-disable jsx-a11y/control-has-associated-label */\ntype Props = {\n  todo: Todo;\n  onToggle: (id: number, status: boolean) => void\n  onRemove: (id: number) => void\n  onUpdateList: (id: number, key: string, value: string | boolean) => void\n};\n\nexport const TodoItem: React.FC<Props> = React.memo(({\n  todo,\n  onToggle,\n  onRemove,\n  onUpdateList,\n}) => {\n  const { title, completed, id } = todo;\n  const [edit, setEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const [value, setValue] = useState(title);\n\n  const handleKeyUp = (key: string) => {\n    if (key === 'Enter' && !value.length) {\n      onRemove(id);\n      onUpdateList(id, 'title', value);\n    }\n\n    if (key === 'Enter') {\n      setNewTitle(value);\n      onUpdateList(id, 'title', value);\n      setEdit(false);\n    }\n\n    if (key === 'Escape') {\n      setValue(newTitle);\n      onUpdateList(id, 'title', value);\n      setEdit(false);\n    }\n  };\n\n  const handleBlur = () => {\n    if (!value.length) {\n      onRemove(id);\n      onUpdateList(id, 'title', value);\n    }\n\n    setNewTitle(value);\n    onUpdateList(id, 'title', value);\n    setEdit(false);\n  };\n\n  return (\n    <li\n      className={classNames('',\n        {\n          // eslint-disable-next-line quote-props\n          'completed': (completed === true && edit === false),\n          // eslint-disable-next-line quote-props\n          'editing': edit,\n        })}\n      onDoubleClick={() => setEdit(true)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`toggle-view-${id}`}\n          checked={completed}\n          onChange={event => {\n            onToggle(id, event.target.checked);\n          }}\n        />\n        <label htmlFor={`toggle-view-${id}`}>{newTitle}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          onClick={() => onRemove(id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={value}\n        onBlur={handleBlur}\n        onChange={(event) => setValue(event.target.value)}\n        onKeyUp={(event) => handleKeyUp(event.key)}\n      />\n    </li>\n  );\n});\n","import React from 'react';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  toggleTodo: (id: number, status: boolean) => void;\n  removeTodo: (id: number) => void;\n  status: Status;\n  onUpdateList: (id: number, key: string, value: string | boolean) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  toggleTodo,\n  removeTodo,\n  status,\n  onUpdateList,\n}) => {\n  const visibleTodos = todos.filter(item => {\n    switch (status) {\n      case Status.all:\n        return item;\n      case Status.completed:\n        return item.completed;\n      case Status.active:\n        return !item.completed;\n      default:\n        return 0;\n    }\n  });\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {visibleTodos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          onToggle={toggleTodo}\n          onRemove={removeTodo}\n          onUpdateList={onUpdateList}\n        />\n      ))}\n    </ul>\n  );\n};\n","/* eslint-disable quote-props */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Link as NavLink } from 'react-router-dom';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  onFilterClick: (status: Status) => void;\n  status: Status;\n};\n\nexport const TodosFilter: React.FC<Props> = React.memo(\n  ({ onFilterClick, status }) => {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            to=\"/\"\n            className={classNames({ 'selected': status === Status.all })}\n            onClick={() => onFilterClick(Status.all)}\n          >\n            All\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/active\"\n            className={classNames({ 'selected': status === Status.active })}\n            onClick={(event) => {\n              onFilterClick(Status.active);\n              event.preventDefault();\n            }}\n          >\n            Active\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/completed\"\n            className={classNames(\n              { 'selected': status === Status.completed },\n            )}\n            onClick={() => onFilterClick(Status.completed)}\n          >\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n    );\n  },\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\n\nimport { useLocalStorage } from './api/api';\nimport { NewTodoForm } from './components/NewTodoForm/NewTodoForm';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodosFilter } from './components/TodosFilter/TodosFIlter';\nimport { Status } from './types/Status';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useLocalStorage<Todo[]>('todos', []);\n  const [activeTodos, setActiveTodos] = useState<Todo[]>([]);\n  const [filterStatus, setFilterStatus] = useState(Status.all);\n\n  const getActiveTodos = () => {\n    const active = initialTodos.filter(todo => !todo.completed);\n\n    setActiveTodos(active);\n  };\n\n  const addTodo = (title: string) => {\n    const newTodo: Todo = {\n      id: +new Date(),\n      title,\n      completed: false,\n    };\n\n    setInitialTodos([\n      ...initialTodos,\n      newTodo,\n    ]);\n  };\n\n  const removeTodo = (todoId: number) => {\n    const filteredTodos = initialTodos.filter(todo => todo.id !== todoId);\n\n    setInitialTodos(filteredTodos);\n  };\n\n  const updateInitialTodos = (\n    id: number, prop: string, value?: string | boolean,\n  ) => {\n    let todos = initialTodos.map(item => {\n      if (item.id !== id) {\n        return item;\n      }\n\n      return {\n        ...item,\n        [prop]: value,\n      };\n    });\n\n    todos = [...todos].filter(todo => todo.title.length > 0);\n    setInitialTodos(todos);\n    getActiveTodos();\n  };\n\n  const toggleTodo = (todoId: number, status: boolean) => {\n    const findTodo = initialTodos.find(todo => todo.id === todoId);\n\n    if (findTodo) {\n      updateInitialTodos(findTodo.id, 'completed', status);\n      getActiveTodos();\n    }\n  };\n\n  const toggleAll = (status: boolean) => {\n    const toggleTodos = initialTodos.map(todo => {\n      // eslint-disable-next-line no-param-reassign\n      todo.completed = status;\n\n      return todo;\n    });\n\n    setInitialTodos(toggleTodos);\n  };\n\n  const clearCompleted = () => {\n    const newInitialTodos = initialTodos.filter(item => !item.completed);\n\n    setInitialTodos(newInitialTodos);\n  };\n\n  const handleFilterClick = (status: Status) => {\n    setFilterStatus(status);\n  };\n\n  useEffect(() => {\n    getActiveTodos();\n  }, [initialTodos]);\n\n  return (\n    <div className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <NewTodoForm addTodo={addTodo} />\n      </header>\n\n      {initialTodos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              checked={activeTodos.length === 0}\n              onChange={event => toggleAll(event.target.checked)}\n            />\n\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              todos={initialTodos}\n              toggleTodo={toggleTodo}\n              removeTodo={removeTodo}\n              status={filterStatus}\n              onUpdateList={updateInitialTodos}\n            />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\" data-cy=\"todosCounter\">\n              {`${activeTodos.length} items left`}\n            </span>\n\n            <TodosFilter\n              onFilterClick={handleFilterClick}\n              status={filterStatus}\n            />\n\n            {(initialTodos.length - activeTodos.length) > 0 && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={clearCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\n\ntype ReturnValue<T> = [\n  T,\n  (newValue: T) => void,\n];\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n): ReturnValue<T> {\n  const [value, setValue] = useState<T>(() => {\n    try {\n      const localStorageValue = localStorage.getItem(key);\n\n      if (localStorageValue) {\n        return JSON.parse(localStorageValue);\n      }\n\n      return initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const saveToStorage = (newValue: T) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, saveToStorage];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}